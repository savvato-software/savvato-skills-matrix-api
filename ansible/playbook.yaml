---
- hosts: all 
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3  # Specify the path to Python 3 interpreter
    mysql_database: skillsmatrix_db # Set the desired name for the database
    mysql_root_password: supersecure  # Set the desired root password for MySQL
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Upgrade packages
      apt:
        upgrade: yes
        autoremove: yes
        autoclean: yes
        
    - name: Include iptables rules
      include_tasks: ~/src/devops/ansible/includes/iptables-rules.yaml

    - name: Pull Domain Certification file from S3
      aws_s3:
        bucket: savvato-domain-certifications
        object: skills-matrix-api.staging.savvato.com.p12
        dest: /usr/share/skills-matrix-api.staging.savvato.com.p12
        mode: get

    - name: Set Domain Certification file permissions
      command: chmod 400 /usr/share/skills-matrix-api.staging.savvato.com.p12
    - name: 
      command: chown -R ubuntu:ubuntu /usr/share/skills-matrix-api.staging.savvato.com.p12

    - name: Create database skillsmatrix_db 
      mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
        name: "{{ mysql_database }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create user smdbuser
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
        name: smdbuser
        password: supersecure

    - name: Grant privileges to smdbuser
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
        name: smdbuser 
        password: supersecure
        priv: "*.*:ALL"
        host: localhost
        append_privs: yes

    - name: Create /opt/app directory if it doesn't exist
      file:
        path: /opt/app
        state: directory
      
    - name: Wait for /opt/app directory to be created
      wait_for:
        path: /opt/app
      
    - name: Create application.properties file
      file:
        path: /opt/app/application.properties
        state: touch

    - name: Write to application.properties file
      blockinfile:
        path: /opt/app/application.properties
        block: |
          server.port=8443
          server.ssl.keyAlias=tomcat
          server.ssl.key-store=/usr/share/skills-matrix-api.staging.savvato.com.p12
          server.ssl.key-store-password=supersecure!
          server.ssl.key-password=supersecure!
        
    - name: 
      command: chown -R ubuntu:ubuntu /opt

    - name: Pull JAR file from S3
      aws_s3:
        bucket: savvato-builds-bucket 
        object: savvato-skills-matrix-api.jar
        dest: /opt/app/skills-matrix-api.jar
        mode: get

    - name: Copy systemd service file
      become: true
      copy:
        src:  systemd.service
        dest: /etc/systemd/system/skills-matrix-api.service

    - name: Enable and start the service
      become: true    
      systemd:
        name: skills-matrix-api.service
        state: started
        enabled: yes
        
    - name: Reboot the machine
      become: true
      reboot:
        msg: "Rebooting the machine"
        pre_reboot_delay: 10

